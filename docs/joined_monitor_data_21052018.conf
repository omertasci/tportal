# Change this .conf file path to logstash/config under ELK-Stack directory.
#
# Select query modified for fetching last data from db.
# ":sql_last_value" parameter in query is a reserved key 
# and is used to define last records fetching for the given column(Ex: "cdate").
#
# "SELECT * , TIMESTAMPDIFF(SECOND, temp_out.cdate,bTbl.bTblcdate)*1000 AS timedifference from
# (
#	 SELECT *, case when (cdate <gwg_cdate ) then temp.gwg_cdate else cdate end as joinDate 
#	 FROM indb.monitor_data monitor_data 
#	 INNER JOIN (
#		 SELECT csr.csi as csr_csi, csr.rn as csr_rn, csr.ri as csr_ri, gwg.group_name, gwg.cdate as gwg_cdate FROM indb.csr csr 
#		 INNER JOIN indb.gwg gwg 
#		 ON  indb.gwg.gwg_resource_id = indb.csr.ri 
#	) temp ON  ( monitor_data.csi = SUBSTR(temp.csr_csi,2) )
# ) temp_out  
# CROSS JOIN 
#	( 
#	SELECT ID as bTblId, cdate as bTblcdate from indb.monitor_data ) bTbl where bTbl.bTblId = temp_out.ID AND joinDate > "2018-05-18 15:53:32";"


input {
	jdbc {
	jdbc_driver_library => "../lib/mysql-connector-java-5.1.45-bin.jar"
	jdbc_driver_class => "com.mysql.jdbc.Driver"
	jdbc_connection_string => "jdbc:mysql://127.0.0.1:3306/indb?sql_mode=ANSI_QUOTES"
	jdbc_user => "om2m"
	jdbc_password => "om2m"
	statement => "SELECT * , case when (dp_value REGEXP '^[+\-]?[0-9]+\\.?[0-9]*$' ) then (dp_value * 1) else 0 end as dp_value_NUM from 
 (
	 SELECT *, case when (cdate <gwg_cdate ) then temp.gwg_cdate else cdate end as joinDate 
	 FROM indb.monitor_data monitor_data 
	 INNER JOIN (
		 SELECT csr.csi as csr_csi, csr.rn as csr_rn, csr.ri as csr_ri, gwg.group_name, gwg.cdate as gwg_cdate FROM indb.csr csr 
		 INNER JOIN indb.gwg gwg 
		 ON  indb.gwg.gwg_resource_id = indb.csr.ri 
	) temp ON  ( monitor_data.csi = SUBSTR(temp.csr_csi,2) )
) temp_out  
 CROSS JOIN 
	( 
	SELECT ID as bTblId, cdate as bTblcdate from indb.monitor_data ) bTbl where bTbl.bTblId = temp_out.ID AND joinDate > :sql_last_value" 
	
	use_column_value => true
    tracking_column => "joinDate"
    tracking_column_type => "timestamp"
    last_run_metadata_path => ".logstash_jdbc_last_run_20180521_4"
	jdbc_fetch_size => 1000
	jdbc_paging_enabled => "true"
	jdbc_page_size => "50000"
	} 
}
output {
	elasticsearch { 
		hosts => ["localhost:9200"]
		index => "logstash-joined_monitor_data_index_20180521_4"
		document_type => "joined_monitor_data_doctype"
	}
	stdout { codec => json }
}